#include <cstdio>
#include <set>
#include "tokens.h"

extern int sym;
extern int lineno, colno;

extern char *token_start;
extern int token_len;

extern "C" void getsym();

bool expect(int s, const std::set<int> &follow)
{
	if (sym == s) {
		getsym();
		return true;
	}
	fprintf(stderr, "%d:%d: syntax error at ‘%.*s’\n",
		lineno, colno, token_len, token_start);
	while (!(sym == s || follow.count(sym))) {
		fprintf(stderr, "[skipping ‘%.*s’]\n", token_len, token_start);
		getsym();
	}
	return false;
}

std::set<int> set_union(const std::set<int> &a, std::set<int> &&b)
{
	std::set<int> u(std::move(b));
	u.insert(a.begin(), a.end());
	return u;
}
